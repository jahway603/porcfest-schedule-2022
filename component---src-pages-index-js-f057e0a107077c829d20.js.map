{"version":3,"file":"component---src-pages-index-js-f057e0a107077c829d20.js","mappings":"sNAEMA,EAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,gCACGA,EAAOC,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,KAApB,OACV,qBAAGC,IAAQH,EAAL,IAAcC,GAClB,qBAAGG,KAAMF,GAAOF,GADlB,MACgCC,QAkBxC,EAXgB,SAAC,GAAsB,IAApBI,EAAmB,EAAnBA,KAAMP,EAAa,EAAbA,OACvB,OACE,0BACE,0BAAKO,GACL,0BACE,gBAACR,EAAD,CAAQC,OAAQA,OCblBQ,EAAOC,EAAAA,QAAoB,SAACC,EAAKC,GACrC,IAAQC,EAASD,EAATC,KACFC,GAAaC,EAAAA,EAAAA,MACjB,SAACC,GAAD,OAAmBA,EAAcR,OAASK,IAC1CF,GAGF,GAAIG,EAAa,EAAG,CAClB,IAAMb,EAAS,GAQf,OAPAA,EAAOgB,KAAKL,GAEZD,EAAIM,KAAK,CACPT,KAAMK,EACNZ,OAAAA,IAGKU,EAKT,OAFAA,EAAIG,GAAYb,OAAOgB,KAAKL,GAErBD,IACN,IAEHO,QAAQC,IAAIV,GAEZ,IA6BA,EA7BkB,WAChB,OACE,4BACE,uDACA,oDACA,oFAC2D,IACzD,qBAAGF,KAAK,kCAAR,qBAFF,KAIA,yBACE,gBAAC,EAAAF,KAAD,CAAMe,GAAG,SAAT,cAEF,6BACE,6BACE,0BACE,kCACA,qCAGJ,6BACGX,EAAKP,KAAI,SAACmB,GAAD,OACR,gBAAC,EAAD,CAASf,IAAKe,EAAEb,KAAMA,KAAMa,EAAEb,KAAMP,OAAQoB,EAAEpB","sources":["webpack://porc-fest-schedule/./src/components/ListRow.js","webpack://porc-fest-schedule/./src/pages/index.js"],"sourcesContent":["import React from 'react';\n\nconst Events = ({ events }) => {\n  return (\n    <>\n      {events.map(({ Title, Location, Link }) => (\n        <p key={`${Title}-${Location}`}>\n          <a href={Link}>{Title}</a> | {Location}\n        </p>\n      ))}\n    </>\n  );\n};\n\nconst ListRow = ({ date, events }) => {\n  return (\n    <tr>\n      <td>{date}</td>\n      <td>\n        <Events events={events} />\n      </td>\n    </tr>\n  );\n};\n\nexport default ListRow;\n","import React from 'react';\nimport { findIndex } from 'ramda';\nimport { Link } from 'gatsby';\nimport scheduleData from '../data/schedule.json';\nimport ListRow from '../components/ListRow';\n\nconst data = scheduleData.reduce((acc, cv) => {\n  const { Date } = cv;\n  const eventIndex = findIndex(\n    (existingGroup) => existingGroup.date === Date,\n    acc\n  );\n\n  if (eventIndex < 0) {\n    const events = [];\n    events.push(cv);\n\n    acc.push({\n      date: Date,\n      events\n    });\n\n    return acc;\n  }\n\n  acc[eventIndex].events.push(cv);\n\n  return acc;\n}, []);\n\nconsole.log(data);\n\nconst IndexPage = () => {\n  return (\n    <main>\n      <title>PorcFest Schedule 2022</title>\n      <h1>PorcFest Schedule 2022</h1>\n      <p>\n        This is an attempt to replicate the events from the main{' '}\n        <a href=\"https://porcfest.com/schedule/\">PorcFest schedule</a>.\n      </p>\n      <p>\n        <Link to=\"/grid\">Grid View</Link>\n      </p>\n      <table>\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Event</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((d) => (\n            <ListRow key={d.date} date={d.date} events={d.events} />\n          ))}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n\nexport default IndexPage;\n"],"names":["Events","events","map","Title","Location","Link","key","href","date","data","scheduleData","acc","cv","Date","eventIndex","findIndex","existingGroup","push","console","log","to","d"],"sourceRoot":""}