{"version":3,"file":"component---src-pages-index-js-bc641d99502558469f6a.js","mappings":"sNAsBA,EApBgB,SAAC,GAAqB,EAAnBA,KAAoB,IAAdC,EAAa,EAAbA,OACvB,OACE,gCACGA,EAAOC,KAAI,SAACC,EAAOC,GAClB,IAAQC,EAAgCF,EAAhCE,KAAMC,EAA0BH,EAA1BG,MAAOC,EAAmBJ,EAAnBI,KAAMC,EAAaL,EAAbK,SAC3B,OACE,sBAAIC,IAAKL,GACA,IAANA,EAAU,sBAAIM,QAAST,EAAOU,QAASN,GAAa,KACrD,0BACE,qBAAGO,KAAML,GAAOD,IAElB,0BAAKE,GACL,0BAAKL,EAAM,6BCRjBU,EAAOC,EAAAA,QAAoB,SAACC,EAAKC,GACrC,IAAQX,EAASW,EAATX,KACFY,GAAaC,EAAAA,EAAAA,MACjB,SAACC,GAAD,OAAmBA,EAAcnB,OAASK,IAC1CU,GAGF,GAAIE,EAAa,EAAG,CAClB,IAAMhB,EAAS,GAQf,OAPAA,EAAOmB,KAAKJ,GAEZD,EAAIK,KAAK,CACPpB,KAAMK,EACNJ,OAAAA,IAGKc,EAKT,OAFAA,EAAIE,GAAYhB,OAAOmB,KAAKJ,GAErBD,IACN,IAoCH,EAlCkB,WAChB,OACE,wBAAMM,UAAU,aACd,uDACA,oDACA,oFAC2D,IACzD,qBAAGT,KAAK,kCAAR,qBAFF,kMAOA,yBACE,gBAAC,EAAAL,KAAD,CAAMe,GAAG,SAAT,cAEF,6BACE,6BACE,0BACE,kCACA,mCACA,sCACA,wCAGJ,6BACGT,EAAKX,KAAI,SAACqB,GAAD,OACR,gBAAC,EAAD,CAASd,IAAKc,EAAEvB,KAAMA,KAAMuB,EAAEvB,KAAMC,OAAQsB,EAAEtB","sources":["webpack://porc-fest-schedule/./src/components/ListRow.js","webpack://porc-fest-schedule/./src/pages/index.js"],"sourcesContent":["import React from 'react';\n\nconst ListRow = ({ date, events }) => {\n  return (\n    <>\n      {events.map((event, i) => {\n        const { Date, Title, Link, Location } = event;\n        return (\n          <tr key={i}>\n            {i === 0 ? <td rowSpan={events.length}>{Date}</td> : null}\n            <td>\n              <a href={Link}>{Title}</a>\n            </td>\n            <td>{Location}</td>\n            <td>{event['Duration (Minutes)']}</td>\n          </tr>\n        );\n      })}\n    </>\n  );\n};\n\nexport default ListRow;\n","import React from 'react';\nimport { findIndex } from 'ramda';\nimport { Link } from 'gatsby';\nimport scheduleData from '../data/schedule.json';\nimport ListRow from '../components/ListRow';\n\nconst data = scheduleData.reduce((acc, cv) => {\n  const { Date } = cv;\n  const eventIndex = findIndex(\n    (existingGroup) => existingGroup.date === Date,\n    acc\n  );\n\n  if (eventIndex < 0) {\n    const events = [];\n    events.push(cv);\n\n    acc.push({\n      date: Date,\n      events\n    });\n\n    return acc;\n  }\n\n  acc[eventIndex].events.push(cv);\n\n  return acc;\n}, []);\n\nconst IndexPage = () => {\n  return (\n    <main className=\"list-page\">\n      <title>PorcFest Schedule 2022</title>\n      <h1>PorcFest Schedule 2022</h1>\n      <p>\n        This is an attempt to replicate the events from the main{' '}\n        <a href=\"https://porcfest.com/schedule/\">PorcFest schedule</a>. The\n        event list below was last updated on June 16, 2022, at 9:15 am EST. To\n        update these events, I run a script that pulls them from PorcFest's\n        Google Sheet. It is not automatically synced.\n      </p>\n      <p>\n        <Link to=\"/grid\">Grid View</Link>\n      </p>\n      <table>\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Event</th>\n            <th>Location</th>\n            <th>Duration</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((d) => (\n            <ListRow key={d.date} date={d.date} events={d.events} />\n          ))}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n\nexport default IndexPage;\n"],"names":["date","events","map","event","i","Date","Title","Link","Location","key","rowSpan","length","href","data","scheduleData","acc","cv","eventIndex","findIndex","existingGroup","push","className","to","d"],"sourceRoot":""}