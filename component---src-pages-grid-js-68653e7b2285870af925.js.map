{"version":3,"file":"component---src-pages-grid-js-68653e7b2285870af925.js","mappings":"sNAqBA,EAlBgB,SAAC,GAA4B,IAA1BA,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACfC,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,OACd,OACE,0BACE,0BAAKD,GACJD,EAAaG,KAAI,SAACC,EAAGC,GACpB,IAAMC,GAAQC,EAAAA,EAAAA,MAAK,SAACC,GAAD,OAAOA,EAAEC,WAAaL,IAA3BG,CAA8BL,GACtCQ,EAAQJ,GAASA,EAAMK,MAAQL,EAAMK,MAAQ,GAC7CC,EAAON,GAASA,EAAMO,KAAOP,EAAMO,KAAO,KAEhD,OACE,sBAAIC,IAAKT,GAAa,OAATO,EAAgBF,EAAQ,qBAAGK,KAAMH,GAAOF,SCRzDX,EAAOiB,EAAAA,QAAoB,SAACC,EAAKC,GACrC,IAAQC,EAASD,EAATC,KACFC,GAAaC,EAAAA,EAAAA,MACjB,SAACC,GAAD,OAAmBA,EAAcrB,OAASkB,IAC1CF,GAGF,GAAIG,EAAa,EAAG,CAClB,IAAMlB,EAAS,GAQf,OAPAA,EAAOqB,KAAKL,GAEZD,EAAIM,KAAK,CACPtB,KAAMkB,EACNjB,OAAAA,IAGKe,EAKT,OAFAA,EAAIG,GAAYlB,OAAOqB,KAAKL,GAErBD,IACN,IAEGO,EAAYR,EAAAA,KAAiB,SAACZ,GAAD,OAAOA,EAAEK,YACtCgB,GAAqBC,EAAAA,EAAAA,KAAKF,GAiChC,EA/BiB,WACf,OACE,wBAAMG,UAAU,aACd,8DACA,oDACA,oFAC2D,IACzD,qBAAGZ,KAAK,kCAAR,qBAFF,KAIA,yBACE,gBAAC,EAAAF,KAAD,CAAMe,GAAG,KAAT,cAEF,6BACE,6BACE,0BACE,sBAAId,IAAI,SACPW,EAAmBtB,KAAI,SAACC,GAAD,OACtB,sBAAIU,IAAKV,GAAIA,QAInB,6BACGL,EAAKI,KAAI,SAACC,GAAD,OACR,gBAAC,EAAD,CAASL,KAAMK,EAAGU,IAAKV,EAAEH,KAAMD,aAAcyB","sources":["webpack://porc-fest-schedule/./src/components/GridRow.js","webpack://porc-fest-schedule/./src/pages/grid.js"],"sourcesContent":["import React from 'react';\nimport { find } from 'ramda';\n\nconst GridRow = ({ data, allLocations }) => {\n  const { date, events } = data;\n  return (\n    <tr>\n      <td>{date}</td>\n      {allLocations.map((d, i) => {\n        const event = find((e) => e.Location === d)(events);\n        const title = event && event.Title ? event.Title : '';\n        const link = event && event.Link ? event.Link : null;\n\n        return (\n          <td key={i}>{link === null ? title : <a href={link}>{title}</a>}</td>\n        );\n      })}\n    </tr>\n  );\n};\n\nexport default GridRow;\n","import React from 'react';\nimport { findIndex, uniq } from 'ramda';\nimport { Link } from 'gatsby';\nimport scheduleData from '../data/schedule.json';\nimport GridRow from '../components/GridRow';\n\nconst data = scheduleData.reduce((acc, cv) => {\n  const { Date } = cv;\n  const eventIndex = findIndex(\n    (existingGroup) => existingGroup.date === Date,\n    acc\n  );\n\n  if (eventIndex < 0) {\n    const events = [];\n    events.push(cv);\n\n    acc.push({\n      date: Date,\n      events\n    });\n\n    return acc;\n  }\n\n  acc[eventIndex].events.push(cv);\n\n  return acc;\n}, []);\n\nconst locations = scheduleData.map((d) => d.Location);\nconst allUniqueLocations = uniq(locations);\n\nconst GridPage = () => {\n  return (\n    <main className=\"grid-page\">\n      <title>PorcFest Schedule 2022 | Grid</title>\n      <h1>PorcFest Schedule 2022</h1>\n      <p>\n        This is an attempt to replicate the events from the main{' '}\n        <a href=\"https://porcfest.com/schedule/\">PorcFest schedule</a>.\n      </p>\n      <p>\n        <Link to=\"/\">List View</Link>\n      </p>\n      <table>\n        <thead>\n          <tr>\n            <th key=\"time\"></th>\n            {allUniqueLocations.map((d) => (\n              <th key={d}>{d}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((d) => (\n            <GridRow data={d} key={d.date} allLocations={allUniqueLocations} />\n          ))}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n\nexport default GridPage;\n"],"names":["data","allLocations","date","events","map","d","i","event","find","e","Location","title","Title","link","Link","key","href","scheduleData","acc","cv","Date","eventIndex","findIndex","existingGroup","push","locations","allUniqueLocations","uniq","className","to"],"sourceRoot":""}